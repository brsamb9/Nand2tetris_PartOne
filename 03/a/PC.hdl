// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
	
    // Reset / load
	Mux16(a=in, b=false, sel=reset, out=loadorreset-out);
	Or(a=reset, b=load, out=loadorreset-bit);
	
	// If only incremental, else reset or load 
	Not(in=loadorreset-bit, out=notloadorreset-bit);
	And(a=notloadorreset-bit, b=inc, out=incr-bit);
	
	// calc out[t+1]
	Inc16(in=prev-out, out=incr-out);
	Mux16(a=prev-out, b=incr-out, sel=incr-bit, out=incr-prev-out);
	
	Mux16(a=incr-prev-out, b=loadorreset-out, sel=loadorreset-bit, out=in-reg);
	Or(a=loadorreset-bit, b=inc, out=loadorinc-bit);
		
	Register(in=in-reg, load=loadorinc-bit, out=out, out=prev-out);
}

